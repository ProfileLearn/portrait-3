{"version":3,"sources":["components/SingleLineGridList.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","SingleLineGridList","props","classes","className","GridList","cols","tileData","map","tile","index","GridListTile","src","alt","GridListTileBar","actionIcon","IconButton","App","useState","listaDeArchivos","setListaDeArchivos","archivoActual","setArchivoActual","timer","setTimer","width1","window","innerWidth","height1","innerHeight","backgroundSize","width","height","boxSizing","useStyle","handlePlayClick","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","useEffect","interval","setInterval","indice","length","random","Math","floor","clearInterval","Box","textAlign","onDragOver","e","preventDefault","onDrop","archivos","Array","from","forEach","archivo","urlFile","URL","createObjectURL","procesarArchivos","dataTransfer","files","onClick","event","target","querySelector","Hidden","xsUp","aria-label","style","borderRadius","flexDirection","rootElement","getElementById","ReactDOM","render"],"mappings":"gRAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,SAAU,SACVC,gBAAiBN,EAAMO,QAAQC,WAAWC,OAE5CC,SAAU,CACRP,SAAU,SAEVQ,UAAW,iBAEbC,MAAO,CACLC,MAAOb,EAAMO,QAAQO,QAAQC,OAE/BC,SAAU,CACRR,WACE,4FAqBS,SAASS,EAAmBC,GACzC,IAAMC,EAAUrB,IAEhB,OACE,qBAAKsB,UAAWD,EAAQlB,KAAxB,SACE,cAACoB,EAAA,EAAD,CAAUD,UAAWD,EAAQT,SAAUY,KAAM,IAA7C,SACGJ,EAAMK,SAASC,KAAI,SAACC,EAAMC,GAAP,OAClB,eAACC,EAAA,EAAD,WACE,qBAAKC,IAAKH,EAAMI,IAAKJ,IACrB,cAACK,EAAA,EAAD,CACEX,QAAS,CACPlB,KAAMkB,EAAQH,SACdJ,MAAOO,EAAQP,OAEjBmB,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAgBZ,UAAWD,EAAQP,cATxBc,UC5Cd,SAASO,IAAM,MAEkBC,mBAAS,IAF3B,mBAErBC,EAFqB,KAEJC,EAFI,OAGcF,mBAAS,MAHvB,mBAGrBG,EAHqB,KAGNC,EAHM,OAIFJ,oBAAS,GAJP,mBAIrBK,EAJqB,KAIdC,EAJc,OAKYN,oBAAS,GALrB,mBAQtBO,GARsB,UAQbC,OAAOC,YAChBC,EAAUF,OAAOG,YAYjB1B,EAVWpB,YAAW,CAC1BkC,IAAK,CACHzB,WAAW,OAAD,OAAS6B,EAAT,mCACVS,eAAgB,QAChBzC,SAAU,SACV0C,MAAON,EACPO,OAAQJ,EACRK,UAAW,eAGCC,GAiBhB,SAASC,IACFZ,GAAUa,SAASC,kBAIlBD,SAASC,mBAAoBD,SAASE,kBAH1Cd,GAAS,GACTY,SAASG,gBAAgBC,qBAiC7B,OAlBAC,qBAAU,WAER,IAAMC,EAAWC,aAAY,WAC3B,GAAIpB,GAASa,SAASC,kBAAmB,CACvC,IAAMO,EAASzB,EAAgB0B,OACzBC,EAASC,KAAKC,MAAMD,KAAKD,UAAYF,EAAS,IAAM,EAC1DtB,EAAiBH,EAAgB2B,SAEjCtB,GAAS,GACTF,EAAiB,QAGlB,KACH,OAAO,WACL2B,cAAcP,MAEhB,CAACnB,IAGD,cAAC2B,EAAA,EAAD,CACE9C,UAAWD,EAAQc,IACnBkC,UAAU,SACVC,WAAY,SAACC,GAAD,OAAOA,EAAEC,kBACrBC,OAvDJ,SAAoBF,GAClBA,EAAEC,iBAKJ,SAA0BE,GACZC,MAAMC,KAAKF,GACnBG,SAAQ,SAACC,GACX,IAAIC,EAAUC,IAAIC,gBAAgBH,GAClCxC,EAAmB,GAAD,mBAAKD,GAAL,CAAsB0C,QAP1CG,CADiBX,EAAEY,aAAaC,QAsD9BC,QAjCJ,SAAwBC,GAClBA,EAAMC,SAAWjC,SAASkC,cAAc,qBACtC/C,GACFY,KAyBJ,SAME,eAACoC,EAAA,EAAD,CAAQC,KAAMjD,EAAd,UACE,cAACP,EAAA,EAAD,CAAYyD,aAAW,OAAvB,SACE,cAAC,IAAD,CACEN,QAAShC,EACTuC,MAAO,CACLpF,gBAAiB,QACjByC,MAAO,QACPC,OAAQ,MACR2C,aAAc,WAIpB,kEACA,cAACzB,EAAA,EAAD,CACEwB,MAAO,CACLxF,QAAS,OACT0F,cAAe,MACfxF,eAAgB,iBAJpB,SAME,cAACa,EAAD,CAAoBM,SAAUY,WCxGxC,IAAM0D,EAAczC,SAAS0C,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC/D,EAAD,MAEF4D,K","file":"static/js/main.1607f219.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    flexWrap: \"nowrap\",\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\"\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\r\n  }\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function SingleLineGridList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList className={classes.gridList} cols={2.5}>\r\n        {props.tileData.map((tile, index) => (\r\n          <GridListTile key={index}>\r\n            <img src={tile} alt={tile} />\r\n            <GridListTileBar\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title\r\n              }}\r\n              actionIcon={\r\n                <IconButton>\r\n                  <StarBorderIcon className={classes.title} />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport { makeStyles, Hidden } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\n\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SingleLineGridList from \"./components/SingleLineGridList\";\n// import Card from \"@material-ui/core/Card\";\n// import CardMedia from \"@material-ui/core/CardMedia\";\n\nexport default function App() {\n  // Hooks\n  const [listaDeArchivos, setListaDeArchivos] = useState([]);\n  const [archivoActual, setArchivoActual] = useState(null);\n  const [timer, setTimer] = useState(false);\n  const [fullscreenOn, setFullscreenOn] = useState(false)\n\n  // useStyle\n  const width1 = window.innerWidth;\n  const height1 = window.innerHeight;\n\n  const useStyle = makeStyles({\n    App: {\n      background: `url(${archivoActual}) no-repeat center center fixed`,\n      backgroundSize: \"cover\",\n      overflow: \"hidden\",\n      width: width1,\n      height: height1,\n      boxSizing: \"border-box\"\n    }\n  });\n  const classes = useStyle();\n\n  // Funciones\n  function handleDrop(e) {\n    e.preventDefault();\n    const archivos = e.dataTransfer.files;\n    procesarArchivos(archivos);\n  }\n\n  function procesarArchivos(archivos) {\n    const arr = Array.from(archivos);\n    arr.forEach((archivo) => {\n      let urlFile = URL.createObjectURL(archivo);\n      setListaDeArchivos([...listaDeArchivos, urlFile]);\n    });\n  }\n\n  function handlePlayClick() {\n    if (!timer && !document.fullscreenElement) {\n      setTimer(true);\n      document.documentElement.requestFullscreen();\n    } else {\n      if (document.fullscreenElement) {document.exitFullscreen()}\n    }\n  }\n\n  function handleBoxClick(event) {\n    if (event.target !== document.querySelector(\".MuiSvgIcon-root\")) {\n      if (timer) {\n        handlePlayClick();\n      }\n    }\n  }\n\n  // useEffect\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n      if (timer && document.fullscreenElement) {\n        const indice = listaDeArchivos.length;\n        const random = Math.floor(Math.random() * (indice - 0)) + 0;\n        setArchivoActual(listaDeArchivos[random]);\n      } else {\n        setTimer(false)\n        setArchivoActual(null)\n\n      }\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    }\n  },[timer]);\n\n  return (\n    <Box\n      className={classes.App}\n      textAlign=\"center\"\n      onDragOver={(e) => e.preventDefault()}\n      onDrop={handleDrop}\n      onClick={handleBoxClick}>\n      <Hidden xsUp={timer}>\n        <IconButton aria-label=\"play\">\n          <PlayCircleFilledWhiteIcon\n            onClick={handlePlayClick}\n            style={{\n              backgroundColor: \"white\",\n              width: \"100px\",\n              height: \"100\",\n              borderRadius: \"50%\"\n            }}\n          />\n        </IconButton>\n        <h1>Arrastra las fotos a la pantalla</h1>\n        <Box\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n          <SingleLineGridList tileData={listaDeArchivos} />\n        </Box>\n      </Hidden>\n    </Box>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}